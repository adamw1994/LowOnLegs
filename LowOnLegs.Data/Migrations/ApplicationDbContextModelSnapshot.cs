// <auto-generated />
using System;
using LowOnLegs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LowOnLegs.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("LowOnLegs.Core.Models.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Player1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Player1Score")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Player2Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Player2Score")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("WinnerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MatchId");

                    b.HasIndex("Player1Id");

                    b.HasIndex("Player2Id");

                    b.HasIndex("WinnerId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("LowOnLegs.Core.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            Name = "Piotr",
                            Nickname = "Klimko",
                            Surname = "Klimkowski"
                        },
                        new
                        {
                            PlayerId = 2,
                            Name = "Igor",
                            Nickname = "Igorakowiec",
                            Surname = "Gresista"
                        },
                        new
                        {
                            PlayerId = 3,
                            Name = "Jakub",
                            Nickname = "Kuba",
                            Surname = "Stadniczuk"
                        },
                        new
                        {
                            PlayerId = 4,
                            Name = "Dawid",
                            Nickname = "Braciak",
                            Surname = "Posała"
                        },
                        new
                        {
                            PlayerId = 5,
                            Name = "Michał",
                            Nickname = "Gliwa",
                            Surname = "Gliwa"
                        },
                        new
                        {
                            PlayerId = 6,
                            Name = "Adam",
                            Nickname = "Fred",
                            Surname = "Wybraniec"
                        });
                });

            modelBuilder.Entity("LowOnLegs.Core.Models.Match", b =>
                {
                    b.HasOne("LowOnLegs.Core.Models.Player", "Player1")
                        .WithMany("Matches")
                        .HasForeignKey("Player1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LowOnLegs.Core.Models.Player", "Player2")
                        .WithMany()
                        .HasForeignKey("Player2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LowOnLegs.Core.Models.Player", "Winner")
                        .WithMany("MatchesWon")
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Player1");

                    b.Navigation("Player2");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("LowOnLegs.Core.Models.Player", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("MatchesWon");
                });
#pragma warning restore 612, 618
        }
    }
}
